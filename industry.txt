#include <ESP8266WiFi.h>
#include <DHT.h>
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";
const char* server = "api.thingspeak.com";
String apiKey = "YOUR_API_KEY";   
#define DHTPIN D4
#define DHTTYPE DHT11
#define MQ2_PIN A0
#define BUZZER D2
#define LED D1
DHT dht(DHTPIN, DHTTYPE);
WiFiClient client;
void setup() {
  Serial.begin(115200);
  dht.begin();
  pinMode(BUZZER, OUTPUT);
  pinMode(LED, OUTPUT);
  digitalWrite(BUZZER, LOW);
  digitalWrite(LED, LOW);
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
  Serial.println(WiFi.localIP());
}
void loop() {
  float h = dht.readHumidity();
  float t = dht.readTemperature(); 
  int gasValue = analogRead(MQ2_PIN);
  int gasPercent = map(gasValue, 0, 1023, 0, 100);
  Serial.println("----------------------------");
  Serial.print("Temperature: "); Serial.print(t); Serial.println(" Â°C");
  Serial.print("Humidity: "); Serial.print(h); Serial.println(" %");
  Serial.print("Gas Level: "); Serial.print(gasPercent); Serial.println(" %");
  bool alert = false;
  if (t > 45) { alert = true; Serial.println("High Temperature!"); }
  if (gasPercent > 60) { alert = true; Serial.println(" Gas Leak Detected!"); }
  if (alert) {
    digitalWrite(BUZZER, HIGH);
    digitalWrite(LED, HIGH);
  } else {
    digitalWrite(BUZZER, LOW);
    digitalWrite(LED, LOW);
  }
  if (client.connect(server, 80)) {
    String postStr = apiKey;
    postStr += "&field1=";
    postStr += String(t);
    postStr += "&field2=";
    postStr += String(h);
    postStr += "&field3=";
    postStr += String(gasPercent);
    postStr += "\r\n\r\n";
    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);
    Serial.println(" Data sent to ThingSpeak.");
  }
  client.stop();
  Serial.println("Waiting for next update...");
  delay(20000);  
}
